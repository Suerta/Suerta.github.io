<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SUERTE</title>
  
  <subtitle>追上曾经发光的自己。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-18T09:54:18.878Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>环王环王环王</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springBoot学习</title>
    <link href="http://example.com/2021/01/14/springBoot%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/01/14/springBoot%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-01-14T08:42:34.612Z</published>
    <updated>2021-01-18T09:54:18.878Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot 是一个基于 Spring 框架搭建起来的应用，嵌入Tomcat 、 Jetty 或者 Undertow 等服务器 ，不需要传统 的 WAR 文件进行部署 ，同时提供通过 Maven （或者 Grandle ）依赖的starter ，直接获取开发所需的相关包 ，通过这些 starter 项目就能以 JavaApplication 的形式运行 Spring Boot 的项目。</p><h2 id="springBoot核心技术"><a href="#springBoot核心技术" class="headerlink" title="springBoot核心技术"></a>springBoot核心技术</h2><h3 id="spring基础入门"><a href="#spring基础入门" class="headerlink" title="spring基础入门"></a>spring基础入门</h3><h3 id="spring核心功能"><a href="#spring核心功能" class="headerlink" title="spring核心功能"></a>spring核心功能</h3><h3 id="spring场景整合"><a href="#spring场景整合" class="headerlink" title="spring场景整合"></a>spring场景整合</h3><h2 id="springBoot响应式编程"><a href="#springBoot响应式编程" class="headerlink" title="springBoot响应式编程"></a>springBoot响应式编程</h2><h3 id="响应式编程基础"><a href="#响应式编程基础" class="headerlink" title="响应式编程基础"></a>响应式编程基础</h3><h3 id="webflux开发web应用"><a href="#webflux开发web应用" class="headerlink" title="webflux开发web应用"></a>webflux开发web应用</h3><h3 id="响应式访问持久层"><a href="#响应式访问持久层" class="headerlink" title="响应式访问持久层"></a>响应式访问持久层</h3><h3 id="响应式安全开发"><a href="#响应式安全开发" class="headerlink" title="响应式安全开发"></a>响应式安全开发</h3><h3 id="响应式原理"><a href="#响应式原理" class="headerlink" title="响应式原理"></a>响应式原理</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Spring Boot 是一个基于 Spring 框架搭建起来的应用，嵌入Tomcat 、 Jetty 或者 Undertow 等服务器 ，不需要传统 的 WAR 文件进行部署 ，同时提供通过 Maven （或者 Grandle ）依赖的starter ，直接获取开发所需的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/01/14/hello-world/"/>
    <id>http://example.com/2021/01/14/hello-world/</id>
    <published>2021-01-14T08:27:16.070Z</published>
    <updated>2021-01-18T09:54:16.776Z</updated>
    
    <content type="html"><![CDATA[<p>我告诉你我喜欢你，并不是一定要和你在一起，只是希望今后的你，在遭遇人生低谷的时候，不要灰心，至少曾经有人被你的魅力所吸引，曾经是，以后也会是。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我告诉你我喜欢你，并不是一定要和你在一起，只是希望今后的你，在遭遇人生低谷的时候，不要灰心，至少曾经有人被你的魅力所吸引，曾经是，以后也会是。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
